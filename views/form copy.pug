doctype html
html 
  head 
    include includes/head.pug
    title The Power of Without
    link(rel='stylesheet', href='https://unpkg.com/leaflet@1.6.0/dist/leaflet.css')
    script(src='https://unpkg.com/leaflet@1.6.0/dist/leaflet.js')
    link(rel="stylesheet" href="/dist/css/form.css")
  body 
    - let activeTab = 2;

    include includes/nav.pug
    
    .columns.is-variable.is-8
      if sections.length > 0
        //- #sidebar.column.is-narrow

        #sidebar.nav-column
          .nav
            a.active(onclick = "goToSection(1)") Site
            br
            a(onclick = "goToSection(2)") Architecture
            br
            a(onclick = "goToSection(3)") Population
        


      .column.is-6#content
        if error.length
          .notification.is-danger
            p!= error
        if notification.length
          .notification 
            p!= notification
        else if settlement
          .notification
            p= "Updating data for " + settlement.name
            
        form(action = url method = "POST")
          //- Autofill questions from JSON object passed
          each s, index in sections
            section(class = (index == 0 ? "" : "is-hidden"))
              each category, index in s          
                .level-category
                  .level-left-category 
                    .level-item 
                      label(for = "")= category.label
                      each question, j in category.questions 
                       .d 
                         question.name
                      
                 
                  //- if sections.length > 0 
                  //-   .level-middle
                  //-     each question, j in category.questions

                  //-       .level-item-question

                  //-         .left-level-items

                  //-           .level-item-left
                  //-             .label
                  //-               label(for = "hilz")= question.name 
                  //-             .question-info
                  //-               if question.info
                  //-                 //- .info-button.level-item(data-label = `${category.label}` data-info = `${question.info}`)
                  //-                 //- i.fas.fa-info-circle
                  //-                 .alert-button

                                  
                  //-           br
                  //-           if question.type == "coords"
                  //-             input#coords(name = question.name type = "text" readonly placeholder = "Select a point on the map")    
                  //-           else if question.type == "text"    
                  //-             if question.disabled
                  //-               input(name = question.name type = question.type readonly value = question.value)
                  //-             else
                  //-               input(name = question.name type = question.type value = question.value)
                  //-           else if question.type == "radio" || question.type == "checkbox"
                  //-             each val, index in question.options
                  //-               if question.type == "radio"
                  //-                 input(type = question.type name = question.name id = question.name + "-" + index value = val checked = (val == question.value))
                  //-               else 
                  //-                 input(type = question.type name = question.name id = question.name + "-" + index value = val checked = (question.value != null && question.value.indexOf(val) != -1))
                  //-               label(for = question.name + "-" + index)= val
                  //-               br
                  //-           else if question.type == "range"
                  //-             .range
                  //-               label(for = question.name)= question.options[0]
                  //-               input(type = "range" min = "1" max = `${question.options.length}` value = (question.value ? question.value : null) name = question.name id = question.name)
                  //-               label(for = question.name)= question.options[question.options.length - 1]
                  //-             br
                                
                  //-           br

                  //-         .right-level-items
                  //-           .level-item-right
                  //-             .chat-button(data-name = `${question.name}` data-email = `${email}`)
                  //-               //- i.fa-comment.fas
                  //-             .link-button(data-name = `${question.name}` data-email = `${email}`)
                  //-               //- i.fas.fa-link
                  //-             .comment-button(data-name = `${question.name}` data-email = `${email}`)
                  //-               //- i.fa-comment.fas

    
              .button-level 
                if index > 0
                  a.button.is-light(onclick = "goToSection(" + (index) + ")") Previous Section
                                
                if index == sections.length - 1
                  input.button.is-black(type="submit" value="Save & Submit")
                else 
                  input.button.is-dark(type="submit" value="Save")
                  a.button.is-black(onclick = "goToSection(" + (index + 2) + ")") Next Section


      .column#right-sidebar
        if sections.length == 1 
          section
            if map
              #map
        else 
          #info.box(style = "display:none;")
            h1.heading Info
            p
          #comment.box(style = "display:none;")
            h1.heading Comment
            p.subtitle.is-size-6 Add some clarifying information about this question, if necessary.
            input.text(type = "text") 
            p.help.is-success Successfully saved comment!
            input.button.is-black(type="submit" value="Save Comment" onclick = "saveComment()" data-url = url)
          #link.box(style = "display:none;")
            h1.heading Link
            p.subtitle.is-size-6 Add a link with supporting information, if necessary.
            input.text(type = "text") 
            p.help.is-success Successfully saved link!
            p.help.is-danger Please enter a valid link
            input.button.is-black(type="submit" value="Save Link" onclick = "saveLink()" data-url = url)
    if comments && links 
      script.
        let comments = !{JSON.stringify(comments)};
        let links = !{JSON.stringify(links)};
    script(src = "/src/js/form.js")
    //- script(type="text/javascript" src="https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit")

    
